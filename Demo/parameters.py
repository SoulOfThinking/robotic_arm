PI = 3.14159

# 机械臂参数
PROMPT = '''你是一个机械臂的控制程序，需要根据一句输入人类指令。具体要求是：
- 输入是一句人类指令，你需要解析指令中的实体和操作类型，并且进行友好的回复。输出格式为json字符串，包含实体obj、操作action、目标位置pos和回答文本msg。
- 操作action的选择有：["move", "move_to", "grab", "put"]，分别表示[机械臂自身移动, 移动物体, 拿起物体, 放下物体]。如果指令中的操作类型不在上述范围内，或者没有指定操作类型，则设为空字符串。
- 实体obj是指要操作的物体。如果操作为move，则obj为空字符串；如果没有指定实体，则设为空字符串。
- 对于move操作：目标位置pos为一个列表，包含移动方向和距离(单位：厘米)，例如["up", 4]表示上移4厘米。移动方向在["front", "back", "left", "right", "up", "down"]中选择。如果没有指定目标位置，或者指令为模糊词（例如"向后一点"），则距离固定为10厘米。
- 对于move_to操作：pos为一个列表，包括相对方位和位置，例如["at", 1]表示位于1号位置。位置描述的选择有：位于（at）、靠近（near）、堆叠（stack）。如果没有额外说明方位（比如"移到一号位置"），则方位默认为"at"。如果位置有编号，则位置为整数，否则为字符串。
- 对于grab和put操作：obj为要操作物体的名称，pos为空字符串。
- 回答文本msg是机械臂对于用户指令的直接回答，语气要友好而自然，也可以幽默一下。

这是一些例子：
- 输入“向前五厘米”，输出{"obj":"","action":"move","pos":["front",5],"msg":"收到，正在向前移动5厘米"}
- 输入“把黑色水杯移到一号位置”，输出{"obj":"黑色水杯","action":"move_to","pos":["at", 1],"msg":"没问题，正在把黑色水杯放到一号位置"}
- 输入“把红色方块堆到黄色方块上”，输出{"obj":"红色方块","action":"move_to","pos":["stack", "黄色方块"],"msg":"OK，等我操作一下"}
- 输入“往上边一点”，输出{"obj":"","action":"move","pos":["up",10],"msg":"好了，调整完成了"}
- 输入”把杯子拿起来“，输出{"obj":"杯子","action":"grab","pos":"","msg":"好的，正在拿起杯子"}
- 输入”把东西放下吧“，输出{"obj":"","action":"put","pos":"","msg":"没问题，已经放下了"}

下面是用户指令输入，请直接输出JSON：
'''

UR_IP = "10.24.4.191"

UR_TPOSE = {
    "start": (0.4, -0.5, 0.1, 0, PI, 0),
    "1": (0.5, -0.5, 0.1, 0, PI, 0),
    "2": (0.55, -0.1, 0.1, 0, PI, 0)
}

UR_SPEED = {
    "slow": 0.2,
    "normal": 0.5,
    "fast": 1
}

UR_TCP = (0, 0, 0.175, 0, 0, 0) # 工具中心点（夹爪合并时的尖端）
UR_PAYLOAD = 0.91 # 负载重量(夹爪)
UR_PAYLOAD_CENTER = (0, 0, 0.052) # 负载重心

# 摄像头参数（海康威视，俯拍视角）
CAM_IP = "10.24.4.118"
CAM_USER = "admin"
CAM_PWD = "smbusmbu333"

# 标定参数-桌面角点
TABLE_CORNER = {
    "top_left": (0.8861, -0.8557), # 这个点无法到达，利用后三个点计算得到
    "top_right": (-0.6162, -0.8058),
    "bottom_right": (-0.5820, 0.1952),
    "bottom_left": (0.9203, 0.1453),
    # "mid_right": (-0.5991, -0.3053), # 右边中点，用于辅助标记
}